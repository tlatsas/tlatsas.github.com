<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: disqus | > kodama.gr_]]></title>
  <link href="http://www.kodama.gr/categories/disqus/atom.xml" rel="self"/>
  <link href="http://www.kodama.gr/"/>
  <updated>2013-12-07T13:08:38+02:00</updated>
  <id>http://www.kodama.gr/</id>
  <author>
    <name><![CDATA[Tasos Latsas]]></name>
    <email><![CDATA[tlatsas@gmx.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[migrate disqus comments for jekyll's pretty urls]]></title>
    <link href="http://www.kodama.gr/2012/09/22/migrate-disqus-comments-for-jekyll-pretty-url/"/>
    <updated>2012-09-22T23:16:05+03:00</updated>
    <id>http://www.kodama.gr/2012/09/22/migrate-disqus-comments-for-jekyll-pretty-url</id>
    <content type="html"><![CDATA[<p>I recently enabled the pretty-url feature in Jekyll, which removes the redundant <code>.html</code> suffix in
URLs. You can enable it by adding <code>permalink: pretty</code> in your <code>_config.yml</code>. This of course
broke Disqus comments on all existing pages.</p>

<p>Hopefully, this can be easily fixed using the cool migration tools Disqus provides. The concept is to
write a text file which maps the old URLs to the new ones. The file format should be the like the
following snippet.</p>

<p><div class="highlight"><pre><code class="perl"><span class="n">old_url1</span><span class="p">,</span> <span class="n">new_url1</span>
<span class="n">old_url2</span><span class="p">,</span> <span class="n">new_url2</span>
</code></pre></div></p>

<p>Disqus provides a CSV file which contains all your site’s URLs. To download this file, navigate
to your site’s admin panel and start the URL mapper tool under tools → migrate threads →
start URL mapper. Then download the CSV by clicking the <code>download CSV</code> link.</p>

<p>First we need to get rid of the silly windows CRLF line endings from the CSV file.
A little perl magic can help here.</p>

<p><div class="highlight"><pre><code class="bash">perl -pi -e ‘s/<span class="se">\r\n</span>/<span class="se">\n</span>/g’ disqus-comments-old.csv
</code></pre></div></p>

<p>Then, we need to format the file accordingly. The new URL is the old one without the <code>.html</code> suffix.</p>

<p><div class="highlight"><pre><code class="text">http://example.com/post.html, http://example.com/post
</code></pre></div></p>

<p>Again using perl, we can cook a simple script to automate the process.</p>

<p><div class="highlight"><pre><code class="perl"><span class="c1">#!/usr/bin/env perl</span>
<span class="k">use</span> <span class="n">strict</span><span class="p">;</span><span class="sr">&lt;/p&gt;</span>

<span class="sr">&lt;p&gt;</span><span class="nb">open</span><span class="p">(</span><span class="n">fin</span><span class="p">,</span> <span class="err">‘</span><span class="n">disqus</span><span class="o">-</span><span class="n">comments</span><span class="o">-</span><span class="n">old</span><span class="o">.</span><span class="n">csv</span><span class="err">’</span><span class="p">)</span> <span class="ow">or</span> <span class="nb">die</span> <span class="vg">$!</span><span class="p">;</span>
<span class="nb">open</span><span class="p">(</span><span class="n">fout</span><span class="p">,</span> <span class="err">‘»’</span><span class="p">,</span> <span class="err">‘</span><span class="n">disqus</span><span class="o">-</span><span class="n">comments</span><span class="o">-</span><span class="k">new</span><span class="o">.</span><span class="n">csv</span><span class="err">’</span><span class="p">)</span> <span class="ow">or</span> <span class="nb">die</span> <span class="vg">$!</span><span class="p">;</span><span class="sr">&lt;/p&gt;</span>

<span class="sr">&lt;p&gt;</span><span class="k">my</span> <span class="nv">$old</span><span class="p">;</span> <span class="c1">#keep the original lines&lt;/p&gt;</span>

<span class="sr">&lt;p&gt;</span><span class="k">while</span><span class="p">(</span><span class="sr">&lt;fin&gt;</span><span class="p">)</span> <span class="p">{</span>
    <span class="nb">chomp</span><span class="p">;</span>
    <span class="nv">$old</span> <span class="o">=</span> <span class="s">&quot;$_&quot;</span><span class="p">;</span>
    <span class="sr">s/\.html/\//</span><span class="p">;</span>
    <span class="k">print</span> <span class="n">fout</span> <span class="s">&quot;$old, $_\n&quot;</span><span class="p">;</span>
<span class="p">}</span><span class="sr">&lt;/fin&gt;&lt;/p&gt;</span>

<span class="sr">&lt;p&gt;</span><span class="nb">close</span><span class="p">(</span><span class="n">fin</span><span class="p">);</span>
<span class="nb">close</span><span class="p">(</span><span class="n">fout</span><span class="p">);</span>
</code></pre></div></p>

<p>I didn’t bother to allow passing the filename as a script argument, so I just ‘hardcoded’
the filenames in the script. Edit at will and don’t forget to run it from the proper path.</p>

<p>Finally, upload the new CSV file to the URL migration tool and you will have your old comments back.</p>
]]></content>
  </entry>
  
</feed>
